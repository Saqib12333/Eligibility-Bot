# Copy to .env and fill values

# Gemini API keys (at least one required; per-run start rotation is applied)
GEMINI_API_KEY_1=
GEMINI_API_KEY_2=
GEMINI_API_KEY_3=

# TriZetto login
TRIZETTO_USERNAME=
TRIZETTO_PASSWORD=
# Exact visible text for the OTP email choice on the site
OTP_EMAIL_ADDRESS_TEXT=

# Google Sheets/Drive
SPREADSHEET_ID=
SHEET_NAME=PSA
DRIVE_FOLDER_ID=
# Optional: a separate folder for PDFs if implemented later
PDF_DRIVE_FOLDER_ID=

## Runtime controls
# Polling interval (seconds)
CHECK_INTERVAL_SECONDS=60
# Browser mode
HEADLESS=true
# Process exactly one eligible row and exit
RUN_ONCE=false

# Login/session persistence
# Directory for Chromium persistent profile (cookies, storage)
CHROME_PROFILE_DIR=./chrome-profile
# Cookie pickle used as fallback if profile is not authenticated
COOKIES_FILE=./Trizetto_cookies.pkl

## Observability and timeouts
# Per-row operation timeout in seconds (0 disables)
OPERATION_TIMEOUT_SECONDS=300
# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Max characters of sanitized HTML sent to AI for parsing (prevents token bloat)
REPORT_HTML_MAX_CHARS=60000
KEEP_BROWSER_OPEN=true

# Select which artifact to send to Gemini for report parsing:
#   pdf  - use the generated PDF (default; usually fewer tokens)
#   html - use sanitized HTML (legacy mode)
AI_REPORT_INPUT=pdf

# Cache files (paths are relative to project root by default)
# Payer selection plan cache
PAYER_CACHE_FILE=./payer_cache.json
# Form-fill plan cache (per payer)
FORM_FILL_CACHE_FILE=./form_fill_cache.json